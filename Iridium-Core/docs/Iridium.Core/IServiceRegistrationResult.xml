<Type Name="IServiceRegistrationResult" FullName="Iridium.Core.IServiceRegistrationResult">
  <TypeSignature Language="C#" Value="public interface IServiceRegistrationResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServiceRegistrationResult" />
  <AssemblyInfo>
    <AssemblyName>Iridium-Core</AssemblyName>
    <AssemblyVersion>1.3.1.30062</AssemblyVersion>
    <AssemblyVersion>1.3.2.16888</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public Iridium.Core.IServiceRegistrationResult As (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Iridium.Core.IServiceRegistrationResult As(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.1.30062</AssemblyVersion>
        <AssemblyVersion>1.3.2.16888</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iridium.Core.IServiceRegistrationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Type to register the service as</param>
        <summary>Registers a service as a specific type. This should be used if a service implements more than one interface.</summary>
        <returns />
        <remarks>When a service is registered, it will be returned when a consumer tries to retrieve it using any of the service's base types and/or interfaces. Using this method it is possible to register a service as a specific interface.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Iridium.Core.IServiceRegistrationResult As&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Iridium.Core.IServiceRegistrationResult As&lt;T&gt;() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.1.30062</AssemblyVersion>
        <AssemblyVersion>1.3.2.16888</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iridium.Core.IServiceRegistrationResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Type to register the service as</typeparam>
        <summary>Registers a service as a specific type. This should be used if a service implements more than one interface.</summary>
        <returns />
        <remarks>When a service is registered, it will be returned when a consumer tries to retrieve it using any of the service's base types and/or interfaces. Using this method it is possible to register a service as a specific interface.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisteredAsType">
      <MemberSignature Language="C#" Value="public Type RegisteredAsType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type RegisteredAsType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.1.30062</AssemblyVersion>
        <AssemblyVersion>1.3.2.16888</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the type this service was registered as</summary>
        <value>The type the service was registered as</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public Iridium.Core.IServiceRegistrationResult Replace (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Iridium.Core.IServiceRegistrationResult Replace(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.1.30062</AssemblyVersion>
        <AssemblyVersion>1.3.2.16888</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iridium.Core.IServiceRegistrationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Iridium.Core.IServiceRegistrationResult Replace&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Iridium.Core.IServiceRegistrationResult Replace&lt;T&gt;() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.1.30062</AssemblyVersion>
        <AssemblyVersion>1.3.2.16888</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iridium.Core.IServiceRegistrationResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton">
      <MemberSignature Language="C#" Value="public Iridium.Core.IServiceRegistrationResult Singleton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Iridium.Core.IServiceRegistrationResult Singleton() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.3.1.30062</AssemblyVersion>
        <AssemblyVersion>1.3.2.16888</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Iridium.Core.IServiceRegistrationResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
